{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "String",
      "metadata": {
        "description": "The name of the HDInsight cluster to create."
      }
    },
    "clusterLoginUserName": {
      "defaultValue": "admin",
      "type": "String",
      "metadata": {
        "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
      }
    },
    "clusterLoginPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "sshUserName": {
      "defaultValue": "sshuser",
      "type": "String",
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster."
      }
    },
    "sshPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "clusterLocation": {
      "defaultValue": "Southeast Asia",
      "allowedValues": [
        "East US",
        "East US 2",
        "South India",
        "North Central US",
        "South Central US",
        "West US",
        "North Europe",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "Japan East",
        "Japan West",
        "Australia East",
        "Australia Southeast"
      ],
      "type": "String",
      "metadata": {
        "description": "The location where all azure resources will be deployed."
      }
    },
    "clusterType": {
      "defaultValue": "hadoop",
      "allowedValues": [
        "hadoop",
        "hbase",
        "storm",
        "spark"
      ],
      "type": "String",
      "metadata": {
        "description": "The type of the HDInsight cluster to create."
      }
    },
    "clusterHeadNodeCount": {
      "defaultValue": 2,
      "type": "Int",
      "metadata": {
        "description": "The number of head nodes in the HDInsight cluster."
      }
    },
    "clusterHeadNodeVmType": {
      "defaultValue": "Standard_D3",
      "type": "String",
      "metadata": {
        "description": "The SKU for head nodes VMs."
      }
    },
    "clusterWorkerNodeCount": {
      "defaultValue": 2,
      "type": "Int",
      "metadata": {
        "description": "The number of nodes in the HDInsight cluster."
      }
    },
    "clusterWorkerNodeVmType": {
      "defaultValue": "Standard_D3",
      "type": "String",
      "metadata": {
        "description": "The SKU for worker nodes VMs."
      }
    },
    "clusterHdinsightVersion": {
      "defaultValue": "3.5",
      "type": "String",
      "metadata": {
        "description": "The HDInsight cluster version."
      }
    },
    "storageType": {
      "defaultValue": "Standard_LRS",
      "type": "String",
      "metadata": {
        "description": "The SKU for cluster storage."
      }
    },
    "infaDomainNodeName": {
      "defaultValue": "infadomainnode",
      "type": "String",
      "metadata": {
        "description": "The name of infa domain node VM."
      }
    },
    "infaDomainNodeSize": {
      "defaultValue": "Standard_D2_v2",
      "type": "String",
      "metadata": {
        "description": "The SKU for infa domain node VM."
      }
    },

    "infaDomainNodeAdminUsername": {
      "defaultValue": "sshuser",
      "type": "String",
      "metadata": {
        "description": "The ssh user for infa domain node."
      }
    },
    "infaDomainNodeAdminPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "The ssh user password for infa domain node."
      }
    },
    "vnetName": {
      "defaultValue": "infavnet",
      "type": "String",
      "metadata": {
        "description": "The virtual network name."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The virtual network address prefix."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "infasubnet",
      "metadata": {
        "description": "The subnet name."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The subnet address prefix."
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "infansg",
      "metadata": {
        "description": "The network security group name."
      }
    }
  },
  "variables": {
    "baseUrl": "https://raw.githubusercontent.com/robsharm/gitrepo/master/eicOnAzureTemplates/eicOnAzureTemplates/",
    "clusterDeployTemplateUri": "[concat(variables('baseUrl'), 'clusterdeploy.json')]",
    "storageName": "[concat(parameters('clusterName'),'store')]",
    "storageDeployTemplateUri": "[concat(variables('baseUrl'), 'storagedeploy.json')]",
    "storageLocation": "[parameters('clusterLocation')]",
    "infaDomainNodeDeployTemplateUri": "[concat(variables('baseUrl'), 'infadomainnodedeploy.json')]",
    "infaDomainNodeLocation": "[parameters('clusterLocation')]",
    "virtualNetworkDeployTemplateUri": "[concat(variables('baseUrl'), 'virtualnetworkdeploy.json')]",
    "vnetLocation": "[parameters('clusterLocation')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnetId": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "nsgDeployTemplateUri": "[concat(variables('baseUrl'), 'networksecuritygroupdeploy.json')]",
    "nsgLocation": "[parameters('clusterLocation')]"
  },

  "resources": [

    //Storage setup

    {
      "name": "storageSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageDeployTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageLocation": {
            "value": "[variables('storageLocation')]"
          },
          "storageName": {
            "value": "[variables('storageName')]"
          },
          "storageType": {
            "value": "[parameters('storageType')]"
          }
        }
      }
    },


    //Virtual network setup

    {
      "name": "vnetSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkDeployTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetLocation": {
            "value": "[variables('vnetLocation')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "subnetPrefix": {
            "value": "[parameters('subnetPrefix')]"
          }
        }
      }
    },

    // Network security group setup
    {
      "name": "nsgSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nsgDeployTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "networkSecurityGroupLocation": {
            "value": "[variables('nsgLocation')]"
          },
          "networkSecurityGroupName": {
            "value": "[parameters('nsgName')]"
          }
        }
      }
    },


    //HDInsight cluster setup

    {
      "name": "clusterSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/storageSetup",
        "Microsoft.Resources/deployments/vnetSetup"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('clusterDeployTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },

        "parameters": {
          "clusterHdinsightVersion": {
            "value": "[parameters('clusterHdinsightVersion')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "clusterLoginUserName": {
            "value": "[parameters('clusterLoginUserName')]"
          },
          "clusterLoginPassword": {
            "value": "[parameters('clusterLoginPassword')]"
          },
          "sshUserName": {
            "value": "[parameters('sshPassword')]"
          },
          "sshPassword": {
            "value": "[parameters('sshPassword')]"
          },
          "clusterLocation": {
            "value": "[parameters('clusterLocation')]"
          },
          "clusterType": {
            "value": "[parameters('clusterType')]"
          },
          "clusterHeadNodeCount": {
            "value": "[parameters('clusterHeadNodeCount')]"
          },
          "clusterHeadNodeVmType": {
            "value": "[parameters('clusterHeadNodeVmType')]"
          },
          "clusterWorkerNodeCount": {
            "value": "[parameters('clusterWorkerNodeCount')]"
          },
          "clusterWorkerNodeVmtype": {
            "value": "[parameters('clusterWorkerNodeVmtype')]"
          },
          "storageName": {
            "value": "[variables('storageName')]"
          }
        }
      }
    },


    

    //Infa domain node VM setup

    {
      "name": "infaDomainNodeSetup",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/storageSetup",
        "Microsoft.Resources/deployments/vnetSetup",
        "Microsoft.Resources/deployments/clusterSetup",
        "Microsoft.Resources/deployments/nsgSetup"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('infaDomainNodeDeployTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "infaDomainNodeLocation": {
            "value": "[variables('infaDomainNodeLocation')]"
          },
          "infaDomainNodeName": {
            "value": "[parameters('infaDomainNodeName')]"
          },
          "infaDomainNodeSize": {
            "value": "[parameters('infaDomainNodeSize')]"
          },
          "infaDomainNodeAdminUsername": {
            "value": "[parameters('infaDomainNodeAdminUsername')]"
          },
          "infaDomainNodeAdminPassword": {
            "value": "[parameters('infaDomainNodeAdminPassword')]"
          },
          "subnetId": {
            "value": "[variables('subnetId')]"
          },
          "nsgName": {
            "value": "[parameters('nsgName')]"
          },
          "storageName": {
            "value": "[variables('storageName')]"
          }
        }
      }
    }



  ],
  "outputs": {}
}

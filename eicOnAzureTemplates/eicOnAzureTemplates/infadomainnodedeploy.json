{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "infaDomainNodeLocation": {
      "type": "String"
    },
    "infaDomainNodeName": {
      "type": "String"
    },
    "infaDomainNodeSize": {
      "type": "String"
    },
    "infaDomainNodeAdminUsername": {
      "type": "String"
    },
    "infaDomainNodeAdminPassword": {
      "type": "SecureString"
    },
    "subnetId": {
      "type": "String"
    },
    "nsgName": {
      "type": "String"
    },
    "storageName": {
      "type": "String"
    },
    "infaDomainNodeVmImageUri": {
      "type": "String"
    },
    "infaDomainNodeVmVhdLocation": {
      "type": "String"
    },
    "infaDomainLicenseLocation": {
      "type": "String"
    },
    "sqlDbServerUser": {
      "type": "String"
    },
    "sqlDbServerPassword": {
      "type": "String"
    },
    "sqlDbserverName": {
      "type": "String"
    },
    "mrsDbName": {
      "type": "String"
    },
    "domainDbName": {
      "type": "String"
    },
    "disDbName": {
      "type": "String"
    },
    "cmsDbName": {
      "type": "String"
    },
    "baseUrl": {
      "type": "String"
    },
    "infaAdministratorLoginUser": {
      "type": "String"
    },
    "infaAdministratorLoginPassword": {
      "type": "String"
    },
    "clusterName": {
      "type": "String"
    },
    "clusterLoginUserName": {
      "type": "String"
    },
    "clusterLoginPassword": {
      "type": "String"
    },
    "sshUserName": {
      "type": "String"
    },
    "sshPassword": {
      "type": "String"
    }
  },
  "variables": {
    "index": 0,
    "launchServicesScriptUri": "[concat(parameters('baseUrl'),'launchServices.sh')]",
    "nodeDNSName": "[toLower(concat(parameters('infaDomainNodeName'), uniqueString(resourceGroup().id)))]",
    "nodeNicName": "[concat(parameters('infaDomainNodeName'),'Nic')]"
  },
  "resources": [
    {
      "name": "[variables('nodeDNSName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('infaDomainNodeLocation')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [],

      "tags": {},
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('nodeDNSName')]"
        }
      }
    },
    {
      "name": "[variables('nodeNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('infaDomainNodeLocation')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('nodeDNSName'))]"
      ],
      "tags": {},
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetId')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('nodeDNSName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
        }
      }
    },
    {
      "name": "[parameters('infaDomainNodeName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('infaDomainNodeLocation')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('nodeDNSName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nodeNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('infaDomainNodeSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('infaDomainNodeName')]",
          "adminUsername": "[parameters('infaDomainNodeAdminUsername')]",
          "adminPassword": "[parameters('infaDomainNodeAdminPassword')]"
        },
        //For Testing - Start - Remove after image being staged
        "storageProfile": {
          "osDisk": {
            "name": "VMDisk",
            "osType": "linux",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[parameters('infaDomainNodeVmImageUri')]"
            },
            "vhd": {
              "uri": "[concat(parameters('infaDomainNodeVmVhdLocation'), parameters('infaDomainNodeName'),uniquestring(resourceGroup().id), '.osdisk.vhd')]"
            }
          }
        },
        //For Testing - End - Remove after image being staged
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nodeNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "scriptExtension",
          "type": "extensions",
          "location": "[parameters('infaDomainNodeLocation')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('infaDomainNodeName'))]"
          ],

          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[variables('launchServicesScriptUri')]"
              ],
              "commandToExecute": "[concat('./launchServices.sh ',parameters('infaDomainLicenseLocation'),' ',parameters('sqlDbServerUser'),' ',parameters('sqlDbServerPassword'),' ',parameters('sqlDbserverName'),' ',parameters('infaAdministratorLoginUser'),' ',parameters('infaAdministratorLoginPassword'),' ',parameters('domainDbName'),' ',parameters('mrsDbName'),' ',parameters('disDbName'),' ',parameters('cmsDbName'),' ',parameters('clusterName'),' ',parameters('clusterLoginUserName'),' ',parameters('clusterLoginPassword'),' ',parameters('sshUserName'),' ',parameters('sshPassword'))]"
            }
          }
        }
      ]
    }
    
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('infaDomainNodeName')), '2016-10-01').dnsSettings.fqdn]",
      "type": "string"
    }

  }
}

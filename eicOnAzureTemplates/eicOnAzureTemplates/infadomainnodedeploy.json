{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "infaDomainNodeLocation": {
      "type": "String"
    },
    "infaDomainNodeName": {
      "type": "String"
    },
    "infaDomainNodeSize": {
      "type": "String"
    },
    "infaDomainNodeAdminUsername": {
      "type": "String"
    },
    "infaDomainNodeAdminPassword": {
      "type": "SecureString"
    },
    "subnetId": {
      "type": "String"
    },
    "nsgName": {
      "type": "String"
    },
    "storageName": {
      "type": "String"
    }
  },
  "variables": {
    "index": 0,
    "nodeDNSName": "[toLower(concat(parameters('infaDomainNodeName'), uniqueString(resourceGroup().id)))]",
    "nodeNicName": "[concat(parameters('infaDomainNodeName'),'Nic')]"
  },
  "resources": [
    {
      "name": "[variables('nodeDNSName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('infaDomainNodeLocation')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [],

      "tags": {},
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('nodeDNSName')]"
        }
      }
    },
    {
      "name": "[variables('nodeNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('infaDomainNodeLocation')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('nodeDNSName'))]"
      ],
      "tags": {},
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetId')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('nodeDNSName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
        }
      }
    },
    {
      "name": "[parameters('infaDomainNodeName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('infaDomainNodeLocation')]",
      "apiVersion": "2016-03-30",

      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nodeNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('infaDomainNodeSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('infaDomainNodeName')]",
          "adminUsername": "[parameters('infaDomainNodeAdminUsername')]",
          "adminPassword": "[parameters('infaDomainNodeAdminPassword')]"
        },
        //For Testing - Start - Remove after image being staged
        "storageProfile": {
          "osDisk": {
            "name": "VMDisk",
            "osType": "linux",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "https://eicvmforvhdstorage.blob.core.windows.net/system/Microsoft.Compute/Images/vhd/eicvmforvhd-osDisk.527e641b-d466-47c5-86c1-4d92335ff6a4.vhd"
            },
            "vhd": {
              "uri": "[concat('https://eicvmforvhdstorage.blob.core.windows.net/linuxvhd/', parameters('infaDomainNodeName'),uniquestring(resourceGroup().id), '.osdisk.vhd')]"
            }
          }
        },
        //For Testing - End - Remove after image being staged
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nodeNicName'))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('infaDomainNodeName')), '2016-10-01').dnsSettings.fqdn]",
      "type": "string"
    }

  }
}
